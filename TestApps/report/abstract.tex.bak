%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{abstract}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The modern internet generates petabytes of data per day. Processing
    vast ammounts of data is an increasingly common task for both
    scientists and modestly experienced programmers. Often this data
    is naturally represeted as a graph, such as social media freinds,
    and requires clusters of machines to process. Concurrent trends in
    data center archetecture suggest that the rack is the new server,
    and shared memory is now a feasable interface between rack
    colocated servers. These trends made us wonder \textit{How simple
    can fast graph processing be on a rack of servers?}. We
    investigated the tradeoffs of the conventional pregal style
    \textit{"think like a vertex"} programming model, and found its
    performance unacceptable. In contrast we find that a
    \textit{"Think like a subgraph"} model respects locality in common
    graphs, provides a more holistic programming interface, and runs
    fast!

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\end{abstract}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
