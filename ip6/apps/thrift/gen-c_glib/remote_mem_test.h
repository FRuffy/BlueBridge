/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef REMOTE_MEM_TEST_H
#define REMOTE_MEM_TEST_H

#include <thrift/c_glib/processor/thrift_dispatch_processor.h>

#include "remote_mem_test_types.h"

/* RemoteMemTest service interface */
typedef struct _RemoteMemTestIf RemoteMemTestIf;  /* dummy object */

struct _RemoteMemTestIfInterface
{
  GTypeInterface parent;

  gboolean (*ping) (RemoteMemTestIf *iface, GError **error);
  gboolean (*allocate_mem) (RemoteMemTestIf *iface, GByteArray ** _return, const gint32 size, CallException ** ouch, GError **error);
  gboolean (*read_mem) (RemoteMemTestIf *iface, const GByteArray * pointer, CallException ** ouch, GError **error);
  gboolean (*write_mem) (RemoteMemTestIf *iface, const GByteArray * pointer, const gchar * message, CallException ** ouch, GError **error);
  gboolean (*free_mem) (RemoteMemTestIf *iface, const GByteArray * pointer, CallException ** ouch, GError **error);
};
typedef struct _RemoteMemTestIfInterface RemoteMemTestIfInterface;

GType remote_mem_test_if_get_type (void);
#define TYPE_REMOTE_MEM_TEST_IF (remote_mem_test_if_get_type())
#define REMOTE_MEM_TEST_IF(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_REMOTE_MEM_TEST_IF, RemoteMemTestIf))
#define IS_REMOTE_MEM_TEST_IF(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_REMOTE_MEM_TEST_IF))
#define REMOTE_MEM_TEST_IF_GET_INTERFACE(inst) (G_TYPE_INSTANCE_GET_INTERFACE ((inst), TYPE_REMOTE_MEM_TEST_IF, RemoteMemTestIfInterface))

gboolean remote_mem_test_if_ping (RemoteMemTestIf *iface, GError **error);
gboolean remote_mem_test_if_allocate_mem (RemoteMemTestIf *iface, GByteArray ** _return, const gint32 size, CallException ** ouch, GError **error);
gboolean remote_mem_test_if_read_mem (RemoteMemTestIf *iface, const GByteArray * pointer, CallException ** ouch, GError **error);
gboolean remote_mem_test_if_write_mem (RemoteMemTestIf *iface, const GByteArray * pointer, const gchar * message, CallException ** ouch, GError **error);
gboolean remote_mem_test_if_free_mem (RemoteMemTestIf *iface, const GByteArray * pointer, CallException ** ouch, GError **error);

/* RemoteMemTest service client */
struct _RemoteMemTestClient
{
  GObject parent;

  ThriftProtocol *input_protocol;
  ThriftProtocol *output_protocol;
};
typedef struct _RemoteMemTestClient RemoteMemTestClient;

struct _RemoteMemTestClientClass
{
  GObjectClass parent;
};
typedef struct _RemoteMemTestClientClass RemoteMemTestClientClass;

GType remote_mem_test_client_get_type (void);
#define TYPE_REMOTE_MEM_TEST_CLIENT (remote_mem_test_client_get_type())
#define REMOTE_MEM_TEST_CLIENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_REMOTE_MEM_TEST_CLIENT, RemoteMemTestClient))
#define REMOTE_MEM_TEST_CLIENT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), TYPE_REMOTE_MEM_TEST_CLIENT, RemoteMemTestClientClass))
#define REMOTE_MEM_TEST_IS_CLIENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_REMOTE_MEM_TEST_CLIENT))
#define REMOTE_MEM_TEST_IS_CLIENT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_REMOTE_MEM_TEST_CLIENT))
#define REMOTE_MEM_TEST_CLIENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_REMOTE_MEM_TEST_CLIENT, RemoteMemTestClientClass))

gboolean remote_mem_test_client_ping (RemoteMemTestIf * iface, GError ** error);
gboolean remote_mem_test_client_send_ping (RemoteMemTestIf * iface, GError ** error);
gboolean remote_mem_test_client_recv_ping (RemoteMemTestIf * iface, GError ** error);
gboolean remote_mem_test_client_allocate_mem (RemoteMemTestIf * iface, GByteArray ** _return, const gint32 size, CallException ** ouch, GError ** error);
gboolean remote_mem_test_client_send_allocate_mem (RemoteMemTestIf * iface, const gint32 size, GError ** error);
gboolean remote_mem_test_client_recv_allocate_mem (RemoteMemTestIf * iface, GByteArray ** _return, CallException ** ouch, GError ** error);
gboolean remote_mem_test_client_read_mem (RemoteMemTestIf * iface, const GByteArray * pointer, CallException ** ouch, GError ** error);
gboolean remote_mem_test_client_send_read_mem (RemoteMemTestIf * iface, const GByteArray * pointer, GError ** error);
gboolean remote_mem_test_client_recv_read_mem (RemoteMemTestIf * iface, CallException ** ouch, GError ** error);
gboolean remote_mem_test_client_write_mem (RemoteMemTestIf * iface, const GByteArray * pointer, const gchar * message, CallException ** ouch, GError ** error);
gboolean remote_mem_test_client_send_write_mem (RemoteMemTestIf * iface, const GByteArray * pointer, const gchar * message, GError ** error);
gboolean remote_mem_test_client_recv_write_mem (RemoteMemTestIf * iface, CallException ** ouch, GError ** error);
gboolean remote_mem_test_client_free_mem (RemoteMemTestIf * iface, const GByteArray * pointer, CallException ** ouch, GError ** error);
gboolean remote_mem_test_client_send_free_mem (RemoteMemTestIf * iface, const GByteArray * pointer, GError ** error);
gboolean remote_mem_test_client_recv_free_mem (RemoteMemTestIf * iface, CallException ** ouch, GError ** error);
void remote_mem_test_client_set_property (GObject *object, guint property_id, const GValue *value, GParamSpec *pspec);
void remote_mem_test_client_get_property (GObject *object, guint property_id, GValue *value, GParamSpec *pspec);

/* RemoteMemTest handler (abstract base class) */
struct _RemoteMemTestHandler
{
  GObject parent;
};
typedef struct _RemoteMemTestHandler RemoteMemTestHandler;

struct _RemoteMemTestHandlerClass
{
  GObjectClass parent;

  gboolean (*ping) (RemoteMemTestIf *iface, GError **error);
  gboolean (*allocate_mem) (RemoteMemTestIf *iface, GByteArray ** _return, const gint32 size, CallException ** ouch, GError **error);
  gboolean (*read_mem) (RemoteMemTestIf *iface, const GByteArray * pointer, CallException ** ouch, GError **error);
  gboolean (*write_mem) (RemoteMemTestIf *iface, const GByteArray * pointer, const gchar * message, CallException ** ouch, GError **error);
  gboolean (*free_mem) (RemoteMemTestIf *iface, const GByteArray * pointer, CallException ** ouch, GError **error);
};
typedef struct _RemoteMemTestHandlerClass RemoteMemTestHandlerClass;

GType remote_mem_test_handler_get_type (void);
#define TYPE_REMOTE_MEM_TEST_HANDLER (remote_mem_test_handler_get_type())
#define REMOTE_MEM_TEST_HANDLER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_REMOTE_MEM_TEST_HANDLER, RemoteMemTestHandler))
#define IS_REMOTE_MEM_TEST_HANDLER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_REMOTE_MEM_TEST_HANDLER))
#define REMOTE_MEM_TEST_HANDLER_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), TYPE_REMOTE_MEM_TEST_HANDLER, RemoteMemTestHandlerClass))
#define IS_REMOTE_MEM_TEST_HANDLER_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_REMOTE_MEM_TEST_HANDLER))
#define REMOTE_MEM_TEST_HANDLER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_REMOTE_MEM_TEST_HANDLER, RemoteMemTestHandlerClass))

gboolean remote_mem_test_handler_ping (RemoteMemTestIf *iface, GError **error);
gboolean remote_mem_test_handler_allocate_mem (RemoteMemTestIf *iface, GByteArray ** _return, const gint32 size, CallException ** ouch, GError **error);
gboolean remote_mem_test_handler_read_mem (RemoteMemTestIf *iface, const GByteArray * pointer, CallException ** ouch, GError **error);
gboolean remote_mem_test_handler_write_mem (RemoteMemTestIf *iface, const GByteArray * pointer, const gchar * message, CallException ** ouch, GError **error);
gboolean remote_mem_test_handler_free_mem (RemoteMemTestIf *iface, const GByteArray * pointer, CallException ** ouch, GError **error);

/* RemoteMemTest processor */
struct _RemoteMemTestProcessor
{
  ThriftDispatchProcessor parent;

  /* protected */
  RemoteMemTestHandler *handler;
  GHashTable *process_map;
};
typedef struct _RemoteMemTestProcessor RemoteMemTestProcessor;

struct _RemoteMemTestProcessorClass
{
  ThriftDispatchProcessorClass parent;

  /* protected */
  gboolean (*dispatch_call) (ThriftDispatchProcessor *processor,
                             ThriftProtocol *in,
                             ThriftProtocol *out,
                             gchar *fname,
                             gint32 seqid,
                             GError **error);
};
typedef struct _RemoteMemTestProcessorClass RemoteMemTestProcessorClass;

GType remote_mem_test_processor_get_type (void);
#define TYPE_REMOTE_MEM_TEST_PROCESSOR (remote_mem_test_processor_get_type())
#define REMOTE_MEM_TEST_PROCESSOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_REMOTE_MEM_TEST_PROCESSOR, RemoteMemTestProcessor))
#define IS_REMOTE_MEM_TEST_PROCESSOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_REMOTE_MEM_TEST_PROCESSOR))
#define REMOTE_MEM_TEST_PROCESSOR_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), TYPE_REMOTE_MEM_TEST_PROCESSOR, RemoteMemTestProcessorClass))
#define IS_REMOTE_MEM_TEST_PROCESSOR_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_REMOTE_MEM_TEST_PROCESSOR))
#define REMOTE_MEM_TEST_PROCESSOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_REMOTE_MEM_TEST_PROCESSOR, RemoteMemTestProcessorClass))

#endif /* REMOTE_MEM_TEST_H */
